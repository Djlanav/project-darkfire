Parsed extension_api.json for version JsonHeader { version_major: 4, version_minor: 3, version_patch: 0, version_status: "stable", version_build: "official", version_full_name: "Godot Engine v4.3.stable.official" }
* Add engine class AESContext  [renamed AesContext] <- inherits RefCounted
* Add engine class AStar2D <- inherits RefCounted
* Add engine class AStar3D <- inherits RefCounted
* Add engine class AStarGrid2D <- inherits RefCounted
* Add engine class AcceptDialog <- inherits Window
* Add engine class AnimatableBody2D <- inherits StaticBody2D
* Add engine class AnimatableBody3D <- inherits StaticBody3D
* Add engine class AnimatedSprite2D <- inherits Node2D
* Add engine class AnimatedSprite3D <- inherits SpriteBase3D
* Add engine class AnimatedTexture <- inherits Texture2D
* Add engine class Animation <- inherits Resource
* Add engine class AnimationLibrary <- inherits Resource
* Add engine class AnimationMixer <- inherits Node
* Add engine class AnimationNode <- inherits Resource
* Add engine class AnimationNodeAdd2 <- inherits AnimationNodeSync
* Add engine class AnimationNodeAdd3 <- inherits AnimationNodeSync
* Add engine class AnimationNodeAnimation <- inherits AnimationRootNode
* Add engine class AnimationNodeBlend2 <- inherits AnimationNodeSync
* Add engine class AnimationNodeBlend3 <- inherits AnimationNodeSync
* Add engine class AnimationNodeBlendSpace1D <- inherits AnimationRootNode
* Add engine class AnimationNodeBlendSpace2D <- inherits AnimationRootNode
* Add engine class AnimationNodeBlendTree <- inherits AnimationRootNode
* Add engine class AnimationNodeOneShot <- inherits AnimationNodeSync
* Add engine class AnimationNodeOutput <- inherits AnimationNode
* Add engine class AnimationNodeStateMachine <- inherits AnimationRootNode
* Add engine class AnimationNodeStateMachinePlayback <- inherits Resource
* Add engine class AnimationNodeStateMachineTransition <- inherits Resource
* Add engine class AnimationNodeSub2 <- inherits AnimationNodeSync
* Add engine class AnimationNodeSync <- inherits AnimationNode
* Add engine class AnimationNodeTimeScale <- inherits AnimationNode
* Add engine class AnimationNodeTimeSeek <- inherits AnimationNode
* Add engine class AnimationNodeTransition <- inherits AnimationNodeSync
* Add engine class AnimationPlayer <- inherits AnimationMixer
* Add engine class AnimationRootNode <- inherits AnimationNode
* Add engine class AnimationTree <- inherits AnimationMixer
* Add engine class Area2D <- inherits CollisionObject2D
* Add engine class Area3D <- inherits CollisionObject3D
* Add engine class ArrayMesh <- inherits Mesh
* Add engine class ArrayOccluder3D <- inherits Occluder3D
* Add engine class AspectRatioContainer <- inherits Container
* Add engine class AtlasTexture <- inherits Texture2D
* Add engine class AudioBusLayout <- inherits Resource
* Add engine class AudioEffect <- inherits Resource
* Add engine class AudioEffectAmplify <- inherits AudioEffect
* Add engine class AudioEffectBandLimitFilter <- inherits AudioEffectFilter
* Add engine class AudioEffectBandPassFilter <- inherits AudioEffectFilter
* Add engine class AudioEffectCapture <- inherits AudioEffect
* Add engine class AudioEffectChorus <- inherits AudioEffect
* Add engine class AudioEffectCompressor <- inherits AudioEffect
* Add engine class AudioEffectDelay <- inherits AudioEffect
* Add engine class AudioEffectDistortion <- inherits AudioEffect
* Add engine class AudioEffectEQ  [renamed AudioEffectEq] <- inherits AudioEffect
* Add engine class AudioEffectEQ10  [renamed AudioEffectEq10] <- inherits AudioEffectEQ  [renamed AudioEffectEq]
* Add engine class AudioEffectEQ21  [renamed AudioEffectEq21] <- inherits AudioEffectEQ  [renamed AudioEffectEq]
* Add engine class AudioEffectEQ6  [renamed AudioEffectEq6] <- inherits AudioEffectEQ  [renamed AudioEffectEq]
* Add engine class AudioEffectFilter <- inherits AudioEffect
* Add engine class AudioEffectHardLimiter <- inherits AudioEffect
* Add engine class AudioEffectHighPassFilter <- inherits AudioEffectFilter
* Add engine class AudioEffectHighShelfFilter <- inherits AudioEffectFilter
* Add engine class AudioEffectInstance <- inherits RefCounted
* Add engine class AudioEffectLimiter <- inherits AudioEffect
* Add engine class AudioEffectLowPassFilter <- inherits AudioEffectFilter
* Add engine class AudioEffectLowShelfFilter <- inherits AudioEffectFilter
* Add engine class AudioEffectNotchFilter <- inherits AudioEffectFilter
* Add engine class AudioEffectPanner <- inherits AudioEffect
* Add engine class AudioEffectPhaser <- inherits AudioEffect
* Add engine class AudioEffectPitchShift <- inherits AudioEffect
* Add engine class AudioEffectRecord <- inherits AudioEffect
* Add engine class AudioEffectReverb <- inherits AudioEffect
* Add engine class AudioEffectSpectrumAnalyzer <- inherits AudioEffect
* Add engine class AudioEffectSpectrumAnalyzerInstance <- inherits AudioEffectInstance
* Add engine class AudioEffectStereoEnhance <- inherits AudioEffect
* Add engine class AudioListener2D <- inherits Node2D
* Add engine class AudioListener3D <- inherits Node3D
* Add engine class AudioServer <- inherits Object
* Add engine class AudioStream <- inherits Resource
* Add engine class AudioStreamGenerator <- inherits AudioStream
* Add engine class AudioStreamGeneratorPlayback <- inherits AudioStreamPlaybackResampled
* Add engine class AudioStreamInteractive <- inherits AudioStream
* Add engine class AudioStreamMP3  [renamed AudioStreamMp3] <- inherits AudioStream
* Add engine class AudioStreamMicrophone <- inherits AudioStream
* Add engine class AudioStreamOggVorbis <- inherits AudioStream
* Add engine class AudioStreamPlayback <- inherits RefCounted
* Add engine class AudioStreamPlaybackInteractive <- inherits AudioStreamPlayback
* Add engine class AudioStreamPlaybackOggVorbis <- inherits AudioStreamPlaybackResampled
* Add engine class AudioStreamPlaybackPlaylist <- inherits AudioStreamPlayback
* Add engine class AudioStreamPlaybackPolyphonic <- inherits AudioStreamPlayback
* Add engine class AudioStreamPlaybackResampled <- inherits AudioStreamPlayback
* Add engine class AudioStreamPlaybackSynchronized <- inherits AudioStreamPlayback
* Add engine class AudioStreamPlayer <- inherits Node
* Add engine class AudioStreamPlayer2D <- inherits Node2D
* Add engine class AudioStreamPlayer3D <- inherits Node3D
* Add engine class AudioStreamPlaylist <- inherits AudioStream
* Add engine class AudioStreamPolyphonic <- inherits AudioStream
* Add engine class AudioStreamRandomizer <- inherits AudioStream
* Add engine class AudioStreamSynchronized <- inherits AudioStream
* Add engine class AudioStreamWAV  [renamed AudioStreamWav] <- inherits AudioStream
* Add engine class BackBufferCopy <- inherits Node2D
* Add engine class BaseButton <- inherits Control
* Add engine class BaseMaterial3D <- inherits Material
* Add engine class BitMap <- inherits Resource
* Add engine class Bone2D <- inherits Node2D
* Add engine class BoneAttachment3D <- inherits Node3D
* Add engine class BoneMap <- inherits Resource
* Add engine class BoxContainer <- inherits Container
* Add engine class BoxMesh <- inherits PrimitiveMesh
* Add engine class BoxOccluder3D <- inherits Occluder3D
* Add engine class BoxShape3D <- inherits Shape3D
* Add engine class Button <- inherits BaseButton
* Add engine class ButtonGroup <- inherits Resource
* Add engine class CPUParticles2D  [renamed CpuParticles2D] <- inherits Node2D
* Add engine class CPUParticles3D  [renamed CpuParticles3D] <- inherits GeometryInstance3D
* Add engine class CSGBox3D  [renamed CsgBox3D] <- inherits CSGPrimitive3D  [renamed CsgPrimitive3D]
* Add engine class CSGCombiner3D  [renamed CsgCombiner3D] <- inherits CSGShape3D  [renamed CsgShape3D]
* Add engine class CSGCylinder3D  [renamed CsgCylinder3D] <- inherits CSGPrimitive3D  [renamed CsgPrimitive3D]
* Add engine class CSGMesh3D  [renamed CsgMesh3D] <- inherits CSGPrimitive3D  [renamed CsgPrimitive3D]
* Add engine class CSGPolygon3D  [renamed CsgPolygon3D] <- inherits CSGPrimitive3D  [renamed CsgPrimitive3D]
* Add engine class CSGPrimitive3D  [renamed CsgPrimitive3D] <- inherits CSGShape3D  [renamed CsgShape3D]
* Add engine class CSGShape3D  [renamed CsgShape3D] <- inherits GeometryInstance3D
* Add engine class CSGSphere3D  [renamed CsgSphere3D] <- inherits CSGPrimitive3D  [renamed CsgPrimitive3D]
* Add engine class CSGTorus3D  [renamed CsgTorus3D] <- inherits CSGPrimitive3D  [renamed CsgPrimitive3D]
* Add engine class CallbackTweener <- inherits Tweener
* Add engine class Camera2D <- inherits Node2D
* Add engine class Camera3D <- inherits Node3D
* Add engine class CameraAttributes <- inherits Resource
* Add engine class CameraAttributesPhysical <- inherits CameraAttributes
* Add engine class CameraAttributesPractical <- inherits CameraAttributes
* Add engine class CameraFeed <- inherits RefCounted
* Add engine class CameraServer <- inherits Object
* Add engine class CameraTexture <- inherits Texture2D
* Add engine class CanvasGroup <- inherits Node2D
* Add engine class CanvasItem <- inherits Node
* Add engine class CanvasItemMaterial <- inherits Material
* Add engine class CanvasLayer <- inherits Node
* Add engine class CanvasModulate <- inherits Node2D
* Add engine class CanvasTexture <- inherits Texture2D
* Add engine class CapsuleMesh <- inherits PrimitiveMesh
* Add engine class CapsuleShape2D <- inherits Shape2D
* Add engine class CapsuleShape3D <- inherits Shape3D
* Add engine class CenterContainer <- inherits Container
* Add engine class CharFXTransform  [renamed CharFxTransform] <- inherits RefCounted
* Add engine class CharacterBody2D <- inherits PhysicsBody2D
* Add engine class CharacterBody3D <- inherits PhysicsBody3D
* Add engine class CheckBox <- inherits Button
* Add engine class CheckButton <- inherits Button
* Add engine class CircleShape2D <- inherits Shape2D
* Add engine class ClassDB  [renamed ClassDb] <- inherits Object
* Add engine class CodeEdit <- inherits TextEdit
* Add engine class CodeHighlighter <- inherits SyntaxHighlighter
* Add engine class CollisionObject2D <- inherits Node2D
* Add engine class CollisionObject3D <- inherits Node3D
* Add engine class CollisionPolygon2D <- inherits Node2D
* Add engine class CollisionPolygon3D <- inherits Node3D
* Add engine class CollisionShape2D <- inherits Node2D
* Add engine class CollisionShape3D <- inherits Node3D
* Add engine class ColorPicker <- inherits VBoxContainer
* Add engine class ColorPickerButton <- inherits Button
* Add engine class ColorRect <- inherits Control
* Add engine class CompressedCubemap <- inherits CompressedTextureLayered
* Add engine class CompressedCubemapArray <- inherits CompressedTextureLayered
* Add engine class CompressedTexture2D <- inherits Texture2D
* Add engine class CompressedTexture2DArray <- inherits CompressedTextureLayered
* Add engine class CompressedTexture3D <- inherits Texture3D
* Add engine class CompressedTextureLayered <- inherits TextureLayered
* Add engine class ConcavePolygonShape2D <- inherits Shape2D
* Add engine class ConcavePolygonShape3D <- inherits Shape3D
* Add engine class ConeTwistJoint3D <- inherits Joint3D
* Add engine class ConfigFile <- inherits RefCounted
* Add engine class ConfirmationDialog <- inherits AcceptDialog
* Add engine class Container <- inherits Control
* Add engine class Control <- inherits CanvasItem
* Add engine class ConvexPolygonShape2D <- inherits Shape2D
* Add engine class ConvexPolygonShape3D <- inherits Shape3D
* Add engine class Crypto <- inherits RefCounted
* Add engine class CryptoKey <- inherits Resource
* Add engine class Cubemap <- inherits ImageTextureLayered
* Add engine class CubemapArray <- inherits ImageTextureLayered
* Add engine class Curve <- inherits Resource
* Add engine class Curve2D <- inherits Resource
* Add engine class Curve3D <- inherits Resource
* Add engine class CurveTexture <- inherits Texture2D
* Add engine class CurveXYZTexture  [renamed CurveXyzTexture] <- inherits Texture2D
* Add engine class CylinderMesh <- inherits PrimitiveMesh
* Add engine class CylinderShape3D <- inherits Shape3D
* Add engine class DTLSServer  [renamed DtlsServer] <- inherits RefCounted
* Add engine class DampedSpringJoint2D <- inherits Joint2D
* Add engine class Decal <- inherits VisualInstance3D
* Add engine class DirAccess <- inherits RefCounted
* Add engine class DirectionalLight2D <- inherits Light2D
* Add engine class DirectionalLight3D <- inherits Light3D
* Add engine class DisplayServer <- inherits Object
* Add engine class ENetConnection <- inherits RefCounted
* Add engine class ENetMultiplayerPeer <- inherits MultiplayerPeer
* Add engine class ENetPacketPeer <- inherits PacketPeer
* Add engine class EditorCommandPalette <- inherits ConfirmationDialog
* Add engine class EditorDebuggerPlugin <- inherits RefCounted
* Add engine class EditorDebuggerSession <- inherits RefCounted
* Add engine class EditorExportPlatform <- inherits RefCounted
* Add engine class EditorExportPlatformAndroid <- inherits EditorExportPlatform
* Add engine class EditorExportPlatformIOS  [renamed EditorExportPlatformIos] <- inherits EditorExportPlatform
* Add engine class EditorExportPlatformLinuxBSD  [renamed EditorExportPlatformLinuxBsd] <- inherits EditorExportPlatformPC  [renamed EditorExportPlatformPc]
* Add engine class EditorExportPlatformMacOS  [renamed EditorExportPlatformMacOs] <- inherits EditorExportPlatform
* Add engine class EditorExportPlatformPC  [renamed EditorExportPlatformPc] <- inherits EditorExportPlatform
* Add engine class EditorExportPlatformWeb <- inherits EditorExportPlatform
* Add engine class EditorExportPlatformWindows <- inherits EditorExportPlatformPC  [renamed EditorExportPlatformPc]
* Add engine class EditorExportPlugin <- inherits RefCounted
* Add engine class EditorFeatureProfile <- inherits RefCounted
* Add engine class EditorFileDialog <- inherits ConfirmationDialog
* Add engine class EditorFileSystem <- inherits Node
* Add engine class EditorFileSystemDirectory <- inherits Object
* Add engine class EditorFileSystemImportFormatSupportQuery <- inherits RefCounted
* Add engine class EditorImportPlugin <- inherits ResourceImporter
* Add engine class EditorInspector <- inherits ScrollContainer
* Add engine class EditorInspectorPlugin <- inherits RefCounted
* Add engine class EditorInterface <- inherits Object
* Add engine class EditorNode3DGizmo <- inherits Node3DGizmo
* Add engine class EditorNode3DGizmoPlugin <- inherits Resource
* Add engine class EditorPaths <- inherits Object
* Add engine class EditorPlugin <- inherits Node
* Add engine class EditorProperty <- inherits Container
* Add engine class EditorResourceConversionPlugin <- inherits RefCounted
* Add engine class EditorResourcePicker <- inherits HBoxContainer
* Add engine class EditorResourcePreview <- inherits Node
* Add engine class EditorResourcePreviewGenerator <- inherits RefCounted
* Add engine class EditorResourceTooltipPlugin <- inherits RefCounted
* Add engine class EditorSceneFormatImporter <- inherits RefCounted
* Add engine class EditorSceneFormatImporterBlend <- inherits EditorSceneFormatImporter
* Add engine class EditorSceneFormatImporterFBX2GLTF  [renamed EditorSceneFormatImporterFbx2gltf] <- inherits EditorSceneFormatImporter
* Add engine class EditorSceneFormatImporterGLTF  [renamed EditorSceneFormatImporterGltf] <- inherits EditorSceneFormatImporter
* Add engine class EditorSceneFormatImporterUFBX  [renamed EditorSceneFormatImporterUfbx] <- inherits EditorSceneFormatImporter
* Add engine class EditorScenePostImport <- inherits RefCounted
* Add engine class EditorScenePostImportPlugin <- inherits RefCounted
* Add engine class EditorScript <- inherits RefCounted
* Add engine class EditorScriptPicker <- inherits EditorResourcePicker
* Add engine class EditorSelection <- inherits Object
* Add engine class EditorSettings <- inherits Resource
* Add engine class EditorSpinSlider <- inherits Range
* Add engine class EditorSyntaxHighlighter <- inherits SyntaxHighlighter
* Add engine class EditorTranslationParserPlugin <- inherits RefCounted
* Add engine class EditorUndoRedoManager <- inherits Object
* Add engine class EditorVCSInterface  [renamed EditorVcsInterface] <- inherits Object
* Add engine class EncodedObjectAsID  [renamed EncodedObjectAsId] <- inherits RefCounted
* Add engine class Engine <- inherits Object
* Add engine class EngineDebugger <- inherits Object
* Add engine class EngineProfiler <- inherits RefCounted
* Add engine class Environment <- inherits Resource
* Add engine class Expression <- inherits RefCounted
* Add engine class FBXDocument  [renamed FbxDocument] <- inherits GLTFDocument  [renamed GltfDocument]
* Add engine class FBXState  [renamed FbxState] <- inherits GLTFState  [renamed GltfState]
* Add engine class FastNoiseLite <- inherits Noise
* Add engine class FileAccess <- inherits RefCounted
* Add engine class FileDialog <- inherits ConfirmationDialog
* Add engine class FileSystemDock <- inherits VBoxContainer
* Add engine class FlowContainer <- inherits Container
* Add engine class FogMaterial <- inherits Material
* Add engine class FogVolume <- inherits VisualInstance3D
* Add engine class Font <- inherits Resource
* Add engine class FontFile <- inherits Font
* Add engine class FontVariation <- inherits Font
* Add engine class GDExtension <- inherits Resource
* Add engine class GDExtensionManager <- inherits Object
* Add engine class GDScript <- inherits Script
* Add engine class GLTFAccessor  [renamed GltfAccessor] <- inherits Resource
* Add engine class GLTFAnimation  [renamed GltfAnimation] <- inherits Resource
* Add engine class GLTFBufferView  [renamed GltfBufferView] <- inherits Resource
* Add engine class GLTFCamera  [renamed GltfCamera] <- inherits Resource
* Add engine class GLTFDocument  [renamed GltfDocument] <- inherits Resource
* Add engine class GLTFDocumentExtension  [renamed GltfDocumentExtension] <- inherits Resource
* Add engine class GLTFDocumentExtensionConvertImporterMesh  [renamed GltfDocumentExtensionConvertImporterMesh] <- inherits GLTFDocumentExtension  [renamed GltfDocumentExtension]
* Add engine class GLTFLight  [renamed GltfLight] <- inherits Resource
* Add engine class GLTFMesh  [renamed GltfMesh] <- inherits Resource
* Add engine class GLTFNode  [renamed GltfNode] <- inherits Resource
* Add engine class GLTFPhysicsBody  [renamed GltfPhysicsBody] <- inherits Resource
* Add engine class GLTFPhysicsShape  [renamed GltfPhysicsShape] <- inherits Resource
* Add engine class GLTFSkeleton  [renamed GltfSkeleton] <- inherits Resource
* Add engine class GLTFSkin  [renamed GltfSkin] <- inherits Resource
* Add engine class GLTFSpecGloss  [renamed GltfSpecGloss] <- inherits Resource
* Add engine class GLTFState  [renamed GltfState] <- inherits Resource
* Add engine class GLTFTexture  [renamed GltfTexture] <- inherits Resource
* Add engine class GLTFTextureSampler  [renamed GltfTextureSampler] <- inherits Resource
* Add engine class GPUParticles2D  [renamed GpuParticles2D] <- inherits Node2D
* Add engine class GPUParticles3D  [renamed GpuParticles3D] <- inherits GeometryInstance3D
* Add engine class GPUParticlesAttractor3D  [renamed GpuParticlesAttractor3D] <- inherits VisualInstance3D
* Add engine class GPUParticlesAttractorBox3D  [renamed GpuParticlesAttractorBox3D] <- inherits GPUParticlesAttractor3D  [renamed GpuParticlesAttractor3D]
* Add engine class GPUParticlesAttractorSphere3D  [renamed GpuParticlesAttractorSphere3D] <- inherits GPUParticlesAttractor3D  [renamed GpuParticlesAttractor3D]
* Add engine class GPUParticlesAttractorVectorField3D  [renamed GpuParticlesAttractorVectorField3D] <- inherits GPUParticlesAttractor3D  [renamed GpuParticlesAttractor3D]
* Add engine class GPUParticlesCollision3D  [renamed GpuParticlesCollision3D] <- inherits VisualInstance3D
* Add engine class GPUParticlesCollisionBox3D  [renamed GpuParticlesCollisionBox3D] <- inherits GPUParticlesCollision3D  [renamed GpuParticlesCollision3D]
* Add engine class GPUParticlesCollisionHeightField3D  [renamed GpuParticlesCollisionHeightField3D] <- inherits GPUParticlesCollision3D  [renamed GpuParticlesCollision3D]
* Add engine class GPUParticlesCollisionSDF3D  [renamed GpuParticlesCollisionSdf3d] <- inherits GPUParticlesCollision3D  [renamed GpuParticlesCollision3D]
* Add engine class GPUParticlesCollisionSphere3D  [renamed GpuParticlesCollisionSphere3D] <- inherits GPUParticlesCollision3D  [renamed GpuParticlesCollision3D]
* Add engine class Generic6DOFJoint3D  [renamed Generic6DofJoint3D] <- inherits Joint3D
* Add engine class Geometry2D <- inherits Object
* Add engine class Geometry3D <- inherits Object
* Add engine class GeometryInstance3D <- inherits VisualInstance3D
* Add engine class Gradient <- inherits Resource
* Add engine class GradientTexture1D <- inherits Texture2D
* Add engine class GradientTexture2D <- inherits Texture2D
* Add engine class GridContainer <- inherits Container
* Add engine class GridMap <- inherits Node3D
* Add engine class GrooveJoint2D <- inherits Joint2D
* Add engine class HBoxContainer <- inherits BoxContainer
* Add engine class HFlowContainer <- inherits FlowContainer
* Add engine class HMACContext  [renamed HmacContext] <- inherits RefCounted
* Add engine class HScrollBar <- inherits ScrollBar
* Add engine class HSeparator <- inherits Separator
* Add engine class HSlider <- inherits Slider
* Add engine class HSplitContainer <- inherits SplitContainer
* Add engine class HTTPClient  [renamed HttpClient] <- inherits RefCounted
* Add engine class HTTPRequest  [renamed HttpRequest] <- inherits Node
* Add engine class HashingContext <- inherits RefCounted
* Add engine class HeightMapShape3D <- inherits Shape3D
* Add engine class HingeJoint3D <- inherits Joint3D
* Add engine class IP  [renamed Ip] <- inherits Object
* Add engine class Image <- inherits Resource
* Add engine class ImageFormatLoader <- inherits RefCounted
* Add engine class ImageFormatLoaderExtension <- inherits ImageFormatLoader
* Add engine class ImageTexture <- inherits Texture2D
* Add engine class ImageTexture3D <- inherits Texture3D
* Add engine class ImageTextureLayered <- inherits TextureLayered
* Add engine class ImmediateMesh <- inherits Mesh
* Add engine class ImporterMesh <- inherits Resource
* Add engine class ImporterMeshInstance3D <- inherits Node3D
* Add engine class Input <- inherits Object
* Add engine class InputEvent <- inherits Resource
* Add engine class InputEventAction <- inherits InputEvent
* Add engine class InputEventFromWindow <- inherits InputEvent
* Add engine class InputEventGesture <- inherits InputEventWithModifiers
* Add engine class InputEventJoypadButton <- inherits InputEvent
* Add engine class InputEventJoypadMotion <- inherits InputEvent
* Add engine class InputEventKey <- inherits InputEventWithModifiers
* Add engine class InputEventMIDI  [renamed InputEventMidi] <- inherits InputEvent
* Add engine class InputEventMagnifyGesture <- inherits InputEventGesture
* Add engine class InputEventMouse <- inherits InputEventWithModifiers
* Add engine class InputEventMouseButton <- inherits InputEventMouse
* Add engine class InputEventMouseMotion <- inherits InputEventMouse
* Add engine class InputEventPanGesture <- inherits InputEventGesture
* Add engine class InputEventScreenDrag <- inherits InputEventFromWindow
* Add engine class InputEventScreenTouch <- inherits InputEventFromWindow
* Add engine class InputEventShortcut <- inherits InputEvent
* Add engine class InputEventWithModifiers <- inherits InputEventFromWindow
* Add engine class InputMap <- inherits Object
* Add engine class InstancePlaceholder <- inherits Node
* Add engine class IntervalTweener <- inherits Tweener
* Add engine class ItemList <- inherits Control
* Add engine class JSON  [renamed Json] <- inherits Resource
* Add engine class JSONRPC  [renamed JsonRpc] <- inherits Object
* Add engine class Joint2D <- inherits Node2D
* Add engine class Joint3D <- inherits Node3D
* Add engine class KinematicCollision2D <- inherits RefCounted
* Add engine class KinematicCollision3D <- inherits RefCounted
* Add engine class Label <- inherits Control
* Add engine class Label3D <- inherits GeometryInstance3D
* Add engine class LabelSettings <- inherits Resource
* Add engine class Light2D <- inherits Node2D
* Add engine class Light3D <- inherits VisualInstance3D
* Add engine class LightOccluder2D <- inherits Node2D
* Add engine class LightmapGI  [renamed LightmapGi] <- inherits VisualInstance3D
* Add engine class LightmapGIData  [renamed LightmapGiData] <- inherits Resource
* Add engine class LightmapProbe <- inherits Node3D
* Add engine class Lightmapper <- inherits RefCounted
* Add engine class LightmapperRD  [renamed LightmapperRd] <- inherits Lightmapper
* Add engine class Line2D <- inherits Node2D
* Add engine class LineEdit <- inherits Control
* Add engine class LinkButton <- inherits BaseButton
* Add engine class MainLoop <- inherits Object
* Add engine class MarginContainer <- inherits Container
* Add engine class Marker2D <- inherits Node2D
* Add engine class Marker3D <- inherits Node3D
* Add engine class Marshalls <- inherits Object
* Add engine class Material <- inherits Resource
* Add engine class MenuBar <- inherits Control
* Add engine class MenuButton <- inherits Button
* Add engine class Mesh <- inherits Resource
* Add engine class MeshConvexDecompositionSettings <- inherits RefCounted
* Add engine class MeshDataTool <- inherits RefCounted
* Add engine class MeshInstance2D <- inherits Node2D
* Add engine class MeshInstance3D <- inherits GeometryInstance3D
* Add engine class MeshLibrary <- inherits Resource
* Add engine class MeshTexture <- inherits Texture2D
* Add engine class MethodTweener <- inherits Tweener
* Add engine class MissingNode <- inherits Node
* Add engine class MissingResource <- inherits Resource
* Add engine class MobileVRInterface  [renamed MobileVrInterface] <- inherits XRInterface  [renamed XrInterface]
* Add engine class MovieWriter <- inherits Object
* Add engine class MultiMesh <- inherits Resource
* Add engine class MultiMeshInstance2D <- inherits Node2D
* Add engine class MultiMeshInstance3D <- inherits GeometryInstance3D
* Add engine class MultiplayerAPI  [renamed MultiplayerApi] <- inherits RefCounted
* Add engine class MultiplayerAPIExtension  [renamed MultiplayerApiExtension] <- inherits MultiplayerAPI  [renamed MultiplayerApi]
* Add engine class MultiplayerPeer <- inherits PacketPeer
* Add engine class MultiplayerPeerExtension <- inherits MultiplayerPeer
* Add engine class MultiplayerSpawner <- inherits Node
* Add engine class MultiplayerSynchronizer <- inherits Node
* Add engine class NativeMenu <- inherits Object
* Add engine class NavigationMeshGenerator <- inherits Object
* Add engine class NinePatchRect <- inherits Control
* Add engine class Node <- inherits Object
* Add engine class Node2D <- inherits CanvasItem
* Add engine class Node3D <- inherits Node
* Add engine class Node3DGizmo <- inherits RefCounted
* Add engine class Noise <- inherits Resource
* Add engine class NoiseTexture2D <- inherits Texture2D
* Add engine class NoiseTexture3D <- inherits Texture3D
* Add engine class ORMMaterial3D  [renamed OrmMaterial3D] <- inherits BaseMaterial3D
* Add engine class OS  [renamed Os] <- inherits Object
* Add engine class Object
* Add engine class Occluder3D <- inherits Resource
* Add engine class OccluderInstance3D <- inherits VisualInstance3D
* Add engine class OccluderPolygon2D <- inherits Resource
* Add engine class OfflineMultiplayerPeer <- inherits MultiplayerPeer
* Add engine class OggPacketSequence <- inherits Resource
* Add engine class OggPacketSequencePlayback <- inherits RefCounted
* Add engine class OmniLight3D <- inherits Light3D
* Add engine class OpenXRAPIExtension  [renamed OpenXrApiExtension] <- inherits RefCounted
* Add engine class OpenXRAction  [renamed OpenXrAction] <- inherits Resource
* Add engine class OpenXRActionMap  [renamed OpenXrActionMap] <- inherits Resource
* Add engine class OpenXRActionSet  [renamed OpenXrActionSet] <- inherits Resource
* Add engine class OpenXRCompositionLayer  [renamed OpenXrCompositionLayer] <- inherits Node3D
* Add engine class OpenXRCompositionLayerCylinder  [renamed OpenXrCompositionLayerCylinder] <- inherits OpenXRCompositionLayer  [renamed OpenXrCompositionLayer]
* Add engine class OpenXRCompositionLayerEquirect  [renamed OpenXrCompositionLayerEquirect] <- inherits OpenXRCompositionLayer  [renamed OpenXrCompositionLayer]
* Add engine class OpenXRCompositionLayerQuad  [renamed OpenXrCompositionLayerQuad] <- inherits OpenXRCompositionLayer  [renamed OpenXrCompositionLayer]
* Add engine class OpenXRExtensionWrapperExtension  [renamed OpenXrExtensionWrapperExtension] <- inherits Object
* Add engine class OpenXRHand  [renamed OpenXrHand] <- inherits Node3D
* Add engine class OpenXRIPBinding  [renamed OpenXrIpBinding] <- inherits Resource
* Add engine class OpenXRInteractionProfile  [renamed OpenXrInteractionProfile] <- inherits Resource
* Add engine class OpenXRInteractionProfileMetadata  [renamed OpenXrInteractionProfileMetadata] <- inherits Object
* Add engine class OpenXRInterface  [renamed OpenXrInterface] <- inherits XRInterface  [renamed XrInterface]
* Add engine class OptimizedTranslation <- inherits Translation
* Add engine class OptionButton <- inherits Button
* Add engine class PCKPacker  [renamed PckPacker] <- inherits RefCounted
* Add engine class PackedDataContainer <- inherits Resource
* Add engine class PackedDataContainerRef <- inherits RefCounted
* Add engine class PackedScene <- inherits Resource
* Add engine class PacketPeer <- inherits RefCounted
* Add engine class PacketPeerDTLS  [renamed PacketPeerDtls] <- inherits PacketPeer
* Add engine class PacketPeerExtension <- inherits PacketPeer
* Add engine class PacketPeerStream <- inherits PacketPeer
* Add engine class PacketPeerUDP  [renamed PacketPeerUdp] <- inherits PacketPeer
* Add engine class Panel <- inherits Control
* Add engine class PanelContainer <- inherits Container
* Add engine class PanoramaSkyMaterial <- inherits Material
* Add engine class ParallaxBackground <- inherits CanvasLayer
* Add engine class ParallaxLayer <- inherits Node2D
* Add engine class ParticleProcessMaterial <- inherits Material
* Add engine class Path2D <- inherits Node2D
* Add engine class Path3D <- inherits Node3D
* Add engine class PathFollow2D <- inherits Node2D
* Add engine class PathFollow3D <- inherits Node3D
* Add engine class Performance <- inherits Object
* Add engine class PhysicalBone2D <- inherits RigidBody2D
* Add engine class PhysicalBone3D <- inherits PhysicsBody3D
* Add engine class PhysicalBoneSimulator3D <- inherits SkeletonModifier3D
* Add engine class PhysicalSkyMaterial <- inherits Material
* Add engine class PhysicsBody2D <- inherits CollisionObject2D
* Add engine class PhysicsBody3D <- inherits CollisionObject3D
* Add engine class PhysicsDirectBodyState2D <- inherits Object
* Add engine class PhysicsDirectBodyState2DExtension <- inherits PhysicsDirectBodyState2D
* Add engine class PhysicsDirectBodyState3D <- inherits Object
* Add engine class PhysicsDirectBodyState3DExtension <- inherits PhysicsDirectBodyState3D
* Add engine class PhysicsDirectSpaceState2D <- inherits Object
* Add engine class PhysicsDirectSpaceState2DExtension <- inherits PhysicsDirectSpaceState2D
* Add engine class PhysicsDirectSpaceState3D <- inherits Object
* Add engine class PhysicsDirectSpaceState3DExtension <- inherits PhysicsDirectSpaceState3D
* Add engine class PhysicsMaterial <- inherits Resource
* Add engine class PhysicsPointQueryParameters2D <- inherits RefCounted
* Add engine class PhysicsPointQueryParameters3D <- inherits RefCounted
* Add engine class PhysicsRayQueryParameters2D <- inherits RefCounted
* Add engine class PhysicsRayQueryParameters3D <- inherits RefCounted
* Add engine class PhysicsServer2D <- inherits Object
* Add engine class PhysicsServer2DExtension <- inherits PhysicsServer2D
* Add engine class PhysicsServer2DManager <- inherits Object
* Add engine class PhysicsServer3D <- inherits Object
* Add engine class PhysicsServer3DExtension <- inherits PhysicsServer3D
* Add engine class PhysicsServer3DManager <- inherits Object
* Add engine class PhysicsServer3DRenderingServerHandler <- inherits Object
* Add engine class PhysicsShapeQueryParameters2D <- inherits RefCounted
* Add engine class PhysicsShapeQueryParameters3D <- inherits RefCounted
* Add engine class PhysicsTestMotionParameters2D <- inherits RefCounted
* Add engine class PhysicsTestMotionParameters3D <- inherits RefCounted
* Add engine class PhysicsTestMotionResult2D <- inherits RefCounted
* Add engine class PhysicsTestMotionResult3D <- inherits RefCounted
* Add engine class PinJoint2D <- inherits Joint2D
* Add engine class PinJoint3D <- inherits Joint3D
* Add engine class PlaceholderCubemap <- inherits PlaceholderTextureLayered
* Add engine class PlaceholderCubemapArray <- inherits PlaceholderTextureLayered
* Add engine class PlaceholderMaterial <- inherits Material
* Add engine class PlaceholderMesh <- inherits Mesh
* Add engine class PlaceholderTexture2D <- inherits Texture2D
* Add engine class PlaceholderTexture2DArray <- inherits PlaceholderTextureLayered
* Add engine class PlaceholderTexture3D <- inherits Texture3D
* Add engine class PlaceholderTextureLayered <- inherits TextureLayered
* Add engine class PlaneMesh <- inherits PrimitiveMesh
* Add engine class PointLight2D <- inherits Light2D
* Add engine class PointMesh <- inherits PrimitiveMesh
* Add engine class Polygon2D <- inherits Node2D
* Add engine class PolygonOccluder3D <- inherits Occluder3D
* Add engine class PolygonPathFinder <- inherits Resource
* Add engine class Popup <- inherits Window
* Add engine class PopupMenu <- inherits Popup
* Add engine class PopupPanel <- inherits Popup
* Add engine class PortableCompressedTexture2D <- inherits Texture2D
* Add engine class PrimitiveMesh <- inherits Mesh
* Add engine class PrismMesh <- inherits PrimitiveMesh
* Add engine class ProceduralSkyMaterial <- inherits Material
* Add engine class ProgressBar <- inherits Range
* Add engine class ProjectSettings <- inherits Object
* Add engine class PropertyTweener <- inherits Tweener
* Add engine class QuadMesh <- inherits PlaneMesh
* Add engine class QuadOccluder3D <- inherits Occluder3D
* Add engine class RDAttachmentFormat  [renamed RdAttachmentFormat] <- inherits RefCounted
* Add engine class RDFramebufferPass  [renamed RdFramebufferPass] <- inherits RefCounted
* Add engine class RDPipelineColorBlendState  [renamed RdPipelineColorBlendState] <- inherits RefCounted
* Add engine class RDPipelineColorBlendStateAttachment  [renamed RdPipelineColorBlendStateAttachment] <- inherits RefCounted
* Add engine class RDPipelineDepthStencilState  [renamed RdPipelineDepthStencilState] <- inherits RefCounted
* Add engine class RDPipelineMultisampleState  [renamed RdPipelineMultisampleState] <- inherits RefCounted
* Add engine class RDPipelineRasterizationState  [renamed RdPipelineRasterizationState] <- inherits RefCounted
* Add engine class RDPipelineSpecializationConstant  [renamed RdPipelineSpecializationConstant] <- inherits RefCounted
* Add engine class RDSamplerState  [renamed RdSamplerState] <- inherits RefCounted
* Add engine class RDShaderFile  [renamed RdShaderFile] <- inherits Resource
* Add engine class RDShaderSPIRV  [renamed RdShaderSpirv] <- inherits Resource
* Add engine class RDShaderSource  [renamed RdShaderSource] <- inherits RefCounted
* Add engine class RDTextureFormat  [renamed RdTextureFormat] <- inherits RefCounted
* Add engine class RDTextureView  [renamed RdTextureView] <- inherits RefCounted
* Add engine class RDUniform  [renamed RdUniform] <- inherits RefCounted
* Add engine class RDVertexAttribute  [renamed RdVertexAttribute] <- inherits RefCounted
* Add engine class RandomNumberGenerator <- inherits RefCounted
* Add engine class Range <- inherits Control
* Add engine class RayCast2D <- inherits Node2D
* Add engine class RayCast3D <- inherits Node3D
* Add engine class RectangleShape2D <- inherits Shape2D
* Add engine class RefCounted <- inherits Object
* Add engine class ReferenceRect <- inherits Control
* Add engine class ReflectionProbe <- inherits VisualInstance3D
* Add engine class RegEx <- inherits RefCounted
* Add engine class RegExMatch <- inherits RefCounted
* Add engine class RemoteTransform2D <- inherits Node2D
* Add engine class RemoteTransform3D <- inherits Node3D
* Add engine class RenderData <- inherits Object
* Add engine class RenderDataExtension <- inherits RenderData
* Add engine class RenderDataRD  [renamed RenderDataRd] <- inherits RenderData
* Add engine class RenderSceneBuffers <- inherits RefCounted
* Add engine class RenderSceneBuffersConfiguration <- inherits RefCounted
* Add engine class RenderSceneBuffersExtension <- inherits RenderSceneBuffers
* Add engine class RenderSceneBuffersRD  [renamed RenderSceneBuffersRd] <- inherits RenderSceneBuffers
* Add engine class RenderSceneData <- inherits Object
* Add engine class RenderSceneDataExtension <- inherits RenderSceneData
* Add engine class RenderSceneDataRD  [renamed RenderSceneDataRd] <- inherits RenderSceneData
* Add engine class RenderingDevice <- inherits Object
* Add engine class RenderingServer <- inherits Object
* Add engine class Resource <- inherits RefCounted
* Add engine class ResourceFormatLoader <- inherits RefCounted
* Add engine class ResourceFormatSaver <- inherits RefCounted
* Add engine class ResourceImporter <- inherits RefCounted
* Add engine class ResourceImporterBMFont  [renamed ResourceImporterBmFont] <- inherits ResourceImporter
* Add engine class ResourceImporterBitMap <- inherits ResourceImporter
* Add engine class ResourceImporterCSVTranslation  [renamed ResourceImporterCsvTranslation] <- inherits ResourceImporter
* Add engine class ResourceImporterDynamicFont <- inherits ResourceImporter
* Add engine class ResourceImporterImage <- inherits ResourceImporter
* Add engine class ResourceImporterImageFont <- inherits ResourceImporter
* Add engine class ResourceImporterLayeredTexture <- inherits ResourceImporter
* Add engine class ResourceImporterMP3  [renamed ResourceImporterMp3] <- inherits ResourceImporter
* Add engine class ResourceImporterOBJ  [renamed ResourceImporterObj] <- inherits ResourceImporter
* Add engine class ResourceImporterOggVorbis <- inherits ResourceImporter
* Add engine class ResourceImporterScene <- inherits ResourceImporter
* Add engine class ResourceImporterShaderFile <- inherits ResourceImporter
* Add engine class ResourceImporterTexture <- inherits ResourceImporter
* Add engine class ResourceImporterTextureAtlas <- inherits ResourceImporter
* Add engine class ResourceImporterWAV  [renamed ResourceImporterWav] <- inherits ResourceImporter
* Add engine class ResourceLoader <- inherits Object
* Add engine class ResourcePreloader <- inherits Node
* Add engine class ResourceSaver <- inherits Object
* Add engine class ResourceUID  [renamed ResourceUid] <- inherits Object
* Add engine class RibbonTrailMesh <- inherits PrimitiveMesh
* Add engine class RichTextEffect <- inherits Resource
* Add engine class RichTextLabel <- inherits Control
* Add engine class RigidBody2D <- inherits PhysicsBody2D
* Add engine class RigidBody3D <- inherits PhysicsBody3D
* Add engine class RootMotionView <- inherits VisualInstance3D
* Add engine class SceneMultiplayer <- inherits MultiplayerAPI  [renamed MultiplayerApi]
* Add engine class SceneReplicationConfig <- inherits Resource
* Add engine class SceneState <- inherits RefCounted
* Add engine class SceneTree <- inherits MainLoop
* Add engine class SceneTreeTimer <- inherits RefCounted
* Add engine class Script <- inherits Resource
* Add engine class ScriptCreateDialog <- inherits ConfirmationDialog
* Add engine class ScriptEditor <- inherits PanelContainer
* Add engine class ScriptEditorBase <- inherits VBoxContainer
* Add engine class ScriptExtension <- inherits Script
* Add engine class ScriptLanguage <- inherits Object
* Add engine class ScriptLanguageExtension <- inherits ScriptLanguage
* Add engine class ScrollBar <- inherits Range
* Add engine class ScrollContainer <- inherits Container
* Add engine class SegmentShape2D <- inherits Shape2D
* Add engine class SeparationRayShape2D <- inherits Shape2D
* Add engine class SeparationRayShape3D <- inherits Shape3D
* Add engine class Separator <- inherits Control
* Add engine class Shader <- inherits Resource
* Add engine class ShaderGlobalsOverride <- inherits Node
* Add engine class ShaderInclude <- inherits Resource
* Add engine class ShaderMaterial <- inherits Material
* Add engine class Shape2D <- inherits Resource
* Add engine class Shape3D <- inherits Resource
* Add engine class ShapeCast2D <- inherits Node2D
* Add engine class ShapeCast3D <- inherits Node3D
* Add engine class Shortcut <- inherits Resource
* Add engine class Skeleton2D <- inherits Node2D
* Add engine class Skeleton3D <- inherits Node3D
* Add engine class SkeletonIK3D  [renamed SkeletonIk3d] <- inherits SkeletonModifier3D
* Add engine class SkeletonModifier3D <- inherits Node3D
* Add engine class SkeletonProfile <- inherits Resource
* Add engine class SkeletonProfileHumanoid <- inherits SkeletonProfile
* Add engine class Skin <- inherits Resource
* Add engine class SkinReference <- inherits RefCounted
* Add engine class Sky <- inherits Resource
* Add engine class Slider <- inherits Range
* Add engine class SliderJoint3D <- inherits Joint3D
* Add engine class SoftBody3D <- inherits MeshInstance3D
* Add engine class SphereMesh <- inherits PrimitiveMesh
* Add engine class SphereOccluder3D <- inherits Occluder3D
* Add engine class SphereShape3D <- inherits Shape3D
* Add engine class SpinBox <- inherits Range
* Add engine class SplitContainer <- inherits Container
* Add engine class SpotLight3D <- inherits Light3D
* Add engine class SpringArm3D <- inherits Node3D
* Add engine class Sprite2D <- inherits Node2D
* Add engine class Sprite3D <- inherits SpriteBase3D
* Add engine class SpriteBase3D <- inherits GeometryInstance3D
* Add engine class SpriteFrames <- inherits Resource
* Add engine class StandardMaterial3D <- inherits BaseMaterial3D
* Add engine class StaticBody2D <- inherits PhysicsBody2D
* Add engine class StaticBody3D <- inherits PhysicsBody3D
* Add engine class StatusIndicator <- inherits Node
* Add engine class StreamPeer <- inherits RefCounted
* Add engine class StreamPeerBuffer <- inherits StreamPeer
* Add engine class StreamPeerExtension <- inherits StreamPeer
* Add engine class StreamPeerTCP  [renamed StreamPeerTcp] <- inherits StreamPeer
* Add engine class StreamPeerTLS  [renamed StreamPeerTls] <- inherits StreamPeer
* Add engine class StyleBox <- inherits Resource
* Add engine class StyleBoxEmpty <- inherits StyleBox
* Add engine class StyleBoxFlat <- inherits StyleBox
* Add engine class StyleBoxLine <- inherits StyleBox
* Add engine class StyleBoxTexture <- inherits StyleBox
* Add engine class SubViewport <- inherits Viewport
* Add engine class SubViewportContainer <- inherits Container
* Add engine class SurfaceTool <- inherits RefCounted
* Add engine class SyntaxHighlighter <- inherits Resource
* Add engine class SystemFont <- inherits Font
* Add engine class TCPServer  [renamed TcpServer] <- inherits RefCounted
* Add engine class TLSOptions  [renamed TlsOptions] <- inherits RefCounted
* Add engine class TabBar <- inherits Control
* Add engine class TabContainer <- inherits Container
* Add engine class TextEdit <- inherits Control
* Add engine class TextLine <- inherits RefCounted
* Add engine class TextMesh <- inherits PrimitiveMesh
* Add engine class TextParagraph <- inherits RefCounted
* Add engine class TextServer <- inherits RefCounted
* Add engine class TextServerAdvanced <- inherits TextServerExtension
* Add engine class TextServerDummy <- inherits TextServerExtension
* Add engine class TextServerExtension <- inherits TextServer
* Add engine class TextServerManager <- inherits Object
* Add engine class Texture <- inherits Resource
* Add engine class Texture2D <- inherits Texture
* Add engine class Texture2DArray <- inherits ImageTextureLayered
* Add engine class Texture2DArrayRD  [renamed Texture2DArrayRd] <- inherits TextureLayeredRD  [renamed TextureLayeredRd]
* Add engine class Texture2DRD  [renamed Texture2Drd] <- inherits Texture2D
* Add engine class Texture3D <- inherits Texture
* Add engine class Texture3DRD  [renamed Texture3Drd] <- inherits Texture3D
* Add engine class TextureButton <- inherits BaseButton
* Add engine class TextureCubemapArrayRD  [renamed TextureCubemapArrayRd] <- inherits TextureLayeredRD  [renamed TextureLayeredRd]
* Add engine class TextureCubemapRD  [renamed TextureCubemapRd] <- inherits TextureLayeredRD  [renamed TextureLayeredRd]
* Add engine class TextureLayered <- inherits Texture
* Add engine class TextureLayeredRD  [renamed TextureLayeredRd] <- inherits TextureLayered
* Add engine class TextureProgressBar <- inherits Range
* Add engine class TextureRect <- inherits Control
* Add engine class Theme <- inherits Resource
* Add engine class ThemeDB  [renamed ThemeDb] <- inherits Object
* Add engine class TileData <- inherits Object
* Add engine class TileMap <- inherits Node2D
* Add engine class TileMapLayer <- inherits Node2D
* Add engine class TileMapPattern <- inherits Resource
* Add engine class TileSet <- inherits Resource
* Add engine class TileSetAtlasSource <- inherits TileSetSource
* Add engine class TileSetScenesCollectionSource <- inherits TileSetSource
* Add engine class TileSetSource <- inherits Resource
* Add engine class Time <- inherits Object
* Add engine class Timer <- inherits Node
* Add engine class TorusMesh <- inherits PrimitiveMesh
* Add engine class TouchScreenButton <- inherits Node2D
* Add engine class Translation <- inherits Resource
* Add engine class TranslationServer <- inherits Object
* Add engine class Tree <- inherits Control
* Add engine class TreeItem <- inherits Object
* Add engine class TriangleMesh <- inherits RefCounted
* Add engine class TubeTrailMesh <- inherits PrimitiveMesh
* Add engine class Tween <- inherits RefCounted
* Add engine class Tweener <- inherits RefCounted
* Add engine class UDPServer  [renamed UdpServer] <- inherits RefCounted
* Add engine class UPNP  [renamed Upnp] <- inherits RefCounted
* Add engine class UPNPDevice  [renamed UpnpDevice] <- inherits RefCounted
* Add engine class UndoRedo <- inherits Object
* Add engine class UniformSetCacheRD  [renamed UniformSetCacheRd] <- inherits Object
* Add engine class VBoxContainer <- inherits BoxContainer
* Add engine class VFlowContainer <- inherits FlowContainer
* Add engine class VScrollBar <- inherits ScrollBar
* Add engine class VSeparator <- inherits Separator
* Add engine class VSlider <- inherits Slider
* Add engine class VSplitContainer <- inherits SplitContainer
* Add engine class VehicleBody3D <- inherits RigidBody3D
* Add engine class VehicleWheel3D <- inherits Node3D
* Add engine class VideoStream <- inherits Resource
* Add engine class VideoStreamPlayback <- inherits Resource
* Add engine class VideoStreamPlayer <- inherits Control
* Add engine class VideoStreamTheora <- inherits VideoStream
* Add engine class Viewport <- inherits Node
* Add engine class ViewportTexture <- inherits Texture2D
* Add engine class VisibleOnScreenEnabler2D <- inherits VisibleOnScreenNotifier2D
* Add engine class VisibleOnScreenEnabler3D <- inherits VisibleOnScreenNotifier3D
* Add engine class VisibleOnScreenNotifier2D <- inherits Node2D
* Add engine class VisibleOnScreenNotifier3D <- inherits VisualInstance3D
* Add engine class VisualInstance3D <- inherits Node3D
* Add engine class VisualShader <- inherits Shader
* Add engine class VisualShaderNode <- inherits Resource
* Add engine class VisualShaderNodeBillboard <- inherits VisualShaderNode
* Add engine class VisualShaderNodeBooleanConstant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeBooleanParameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeClamp <- inherits VisualShaderNode
* Add engine class VisualShaderNodeColorConstant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeColorFunc <- inherits VisualShaderNode
* Add engine class VisualShaderNodeColorOp <- inherits VisualShaderNode
* Add engine class VisualShaderNodeColorParameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeComment <- inherits VisualShaderNodeFrame
* Add engine class VisualShaderNodeCompare <- inherits VisualShaderNode
* Add engine class VisualShaderNodeConstant <- inherits VisualShaderNode
* Add engine class VisualShaderNodeCubemap <- inherits VisualShaderNode
* Add engine class VisualShaderNodeCubemapParameter <- inherits VisualShaderNodeTextureParameter
* Add engine class VisualShaderNodeCurveTexture <- inherits VisualShaderNodeResizableBase
* Add engine class VisualShaderNodeCurveXYZTexture  [renamed VisualShaderNodeCurveXyzTexture] <- inherits VisualShaderNodeResizableBase
* Add engine class VisualShaderNodeCustom <- inherits VisualShaderNode
* Add engine class VisualShaderNodeDerivativeFunc <- inherits VisualShaderNode
* Add engine class VisualShaderNodeDeterminant <- inherits VisualShaderNode
* Add engine class VisualShaderNodeDistanceFade <- inherits VisualShaderNode
* Add engine class VisualShaderNodeDotProduct <- inherits VisualShaderNode
* Add engine class VisualShaderNodeExpression <- inherits VisualShaderNodeGroupBase
* Add engine class VisualShaderNodeFaceForward <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeFloatConstant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeFloatFunc <- inherits VisualShaderNode
* Add engine class VisualShaderNodeFloatOp <- inherits VisualShaderNode
* Add engine class VisualShaderNodeFloatParameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeFrame <- inherits VisualShaderNodeResizableBase
* Add engine class VisualShaderNodeFresnel <- inherits VisualShaderNode
* Add engine class VisualShaderNodeGlobalExpression <- inherits VisualShaderNodeExpression
* Add engine class VisualShaderNodeGroupBase <- inherits VisualShaderNodeResizableBase
* Add engine class VisualShaderNodeIf <- inherits VisualShaderNode
* Add engine class VisualShaderNodeInput <- inherits VisualShaderNode
* Add engine class VisualShaderNodeIntConstant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeIntFunc <- inherits VisualShaderNode
* Add engine class VisualShaderNodeIntOp <- inherits VisualShaderNode
* Add engine class VisualShaderNodeIntParameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeIs <- inherits VisualShaderNode
* Add engine class VisualShaderNodeLinearSceneDepth <- inherits VisualShaderNode
* Add engine class VisualShaderNodeMix <- inherits VisualShaderNode
* Add engine class VisualShaderNodeMultiplyAdd <- inherits VisualShaderNode
* Add engine class VisualShaderNodeOuterProduct <- inherits VisualShaderNode
* Add engine class VisualShaderNodeOutput <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParameter <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParameterRef <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParticleAccelerator <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParticleBoxEmitter <- inherits VisualShaderNodeParticleEmitter
* Add engine class VisualShaderNodeParticleConeVelocity <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParticleEmit <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParticleEmitter <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParticleMeshEmitter <- inherits VisualShaderNodeParticleEmitter
* Add engine class VisualShaderNodeParticleMultiplyByAxisAngle <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParticleOutput <- inherits VisualShaderNodeOutput
* Add engine class VisualShaderNodeParticleRandomness <- inherits VisualShaderNode
* Add engine class VisualShaderNodeParticleRingEmitter <- inherits VisualShaderNodeParticleEmitter
* Add engine class VisualShaderNodeParticleSphereEmitter <- inherits VisualShaderNodeParticleEmitter
* Add engine class VisualShaderNodeProximityFade <- inherits VisualShaderNode
* Add engine class VisualShaderNodeRandomRange <- inherits VisualShaderNode
* Add engine class VisualShaderNodeRemap <- inherits VisualShaderNode
* Add engine class VisualShaderNodeReroute <- inherits VisualShaderNode
* Add engine class VisualShaderNodeResizableBase <- inherits VisualShaderNode
* Add engine class VisualShaderNodeRotationByAxis <- inherits VisualShaderNode
* Add engine class VisualShaderNodeSDFRaymarch  [renamed VisualShaderNodeSdfRaymarch] <- inherits VisualShaderNode
* Add engine class VisualShaderNodeSDFToScreenUV  [renamed VisualShaderNodeSdfToScreenUv] <- inherits VisualShaderNode
* Add engine class VisualShaderNodeSample3D <- inherits VisualShaderNode
* Add engine class VisualShaderNodeScreenNormalWorldSpace <- inherits VisualShaderNode
* Add engine class VisualShaderNodeScreenUVToSDF  [renamed VisualShaderNodeScreenUvToSdf] <- inherits VisualShaderNode
* Add engine class VisualShaderNodeSmoothStep <- inherits VisualShaderNode
* Add engine class VisualShaderNodeStep <- inherits VisualShaderNode
* Add engine class VisualShaderNodeSwitch <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTexture <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTexture2DArray <- inherits VisualShaderNodeSample3D
* Add engine class VisualShaderNodeTexture2DArrayParameter <- inherits VisualShaderNodeTextureParameter
* Add engine class VisualShaderNodeTexture2DParameter <- inherits VisualShaderNodeTextureParameter
* Add engine class VisualShaderNodeTexture3D <- inherits VisualShaderNodeSample3D
* Add engine class VisualShaderNodeTexture3DParameter <- inherits VisualShaderNodeTextureParameter
* Add engine class VisualShaderNodeTextureParameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeTextureParameterTriplanar <- inherits VisualShaderNodeTextureParameter
* Add engine class VisualShaderNodeTextureSDF  [renamed VisualShaderNodeTextureSdf] <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTextureSDFNormal  [renamed VisualShaderNodeTextureSdfNormal] <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTransformCompose <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTransformConstant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeTransformDecompose <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTransformFunc <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTransformOp <- inherits VisualShaderNode
* Add engine class VisualShaderNodeTransformParameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeTransformVecMult <- inherits VisualShaderNode
* Add engine class VisualShaderNodeUIntConstant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeUIntFunc <- inherits VisualShaderNode
* Add engine class VisualShaderNodeUIntOp <- inherits VisualShaderNode
* Add engine class VisualShaderNodeUIntParameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeUVFunc  [renamed VisualShaderNodeUvFunc] <- inherits VisualShaderNode
* Add engine class VisualShaderNodeUVPolarCoord  [renamed VisualShaderNodeUvPolarCoord] <- inherits VisualShaderNode
* Add engine class VisualShaderNodeVarying <- inherits VisualShaderNode
* Add engine class VisualShaderNodeVaryingGetter <- inherits VisualShaderNodeVarying
* Add engine class VisualShaderNodeVaryingSetter <- inherits VisualShaderNodeVarying
* Add engine class VisualShaderNodeVec2Constant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeVec2Parameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeVec3Constant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeVec3Parameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeVec4Constant <- inherits VisualShaderNodeConstant
* Add engine class VisualShaderNodeVec4Parameter <- inherits VisualShaderNodeParameter
* Add engine class VisualShaderNodeVectorBase <- inherits VisualShaderNode
* Add engine class VisualShaderNodeVectorCompose <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeVectorDecompose <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeVectorDistance <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeVectorFunc <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeVectorLen <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeVectorOp <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeVectorRefract <- inherits VisualShaderNodeVectorBase
* Add engine class VisualShaderNodeWorldPositionFromDepth <- inherits VisualShaderNode
* Add engine class VoxelGI  [renamed VoxelGi] <- inherits VisualInstance3D
* Add engine class VoxelGIData  [renamed VoxelGiData] <- inherits Resource
* Add engine class WeakRef <- inherits RefCounted
* Add engine class WebRTCDataChannel  [renamed WebRtcDataChannel] <- inherits PacketPeer
* Add engine class WebRTCDataChannelExtension  [renamed WebRtcDataChannelExtension] <- inherits WebRTCDataChannel  [renamed WebRtcDataChannel]
* Add engine class WebRTCMultiplayerPeer  [renamed WebRtcMultiplayerPeer] <- inherits MultiplayerPeer
* Add engine class WebRTCPeerConnection  [renamed WebRtcPeerConnection] <- inherits RefCounted
* Add engine class WebRTCPeerConnectionExtension  [renamed WebRtcPeerConnectionExtension] <- inherits WebRTCPeerConnection  [renamed WebRtcPeerConnection]
* Add engine class WebSocketMultiplayerPeer <- inherits MultiplayerPeer
* Add engine class WebSocketPeer <- inherits PacketPeer
* Add engine class WebXRInterface  [renamed WebXrInterface] <- inherits XRInterface  [renamed XrInterface]
* Add engine class Window <- inherits Viewport
* Add engine class WorkerThreadPool <- inherits Object
* Add engine class World2D <- inherits Resource
* Add engine class World3D <- inherits Resource
* Add engine class WorldBoundaryShape2D <- inherits Shape2D
* Add engine class WorldBoundaryShape3D <- inherits Shape3D
* Add engine class WorldEnvironment <- inherits Node
* Add engine class X509Certificate <- inherits Resource
* Add engine class XMLParser  [renamed XmlParser] <- inherits RefCounted
* Add engine class XRAnchor3D  [renamed XrAnchor3D] <- inherits XRNode3D  [renamed XrNode3D]
* Add engine class XRCamera3D  [renamed XrCamera3D] <- inherits Camera3D
* Add engine class XRController3D  [renamed XrController3D] <- inherits XRNode3D  [renamed XrNode3D]
* Add engine class XRControllerTracker  [renamed XrControllerTracker] <- inherits XRPositionalTracker  [renamed XrPositionalTracker]
* Add engine class XRHandModifier3D  [renamed XrHandModifier3D] <- inherits SkeletonModifier3D
* Add engine class XRHandTracker  [renamed XrHandTracker] <- inherits XRPositionalTracker  [renamed XrPositionalTracker]
* Add engine class XRInterface  [renamed XrInterface] <- inherits RefCounted
* Add engine class XRInterfaceExtension  [renamed XrInterfaceExtension] <- inherits XRInterface  [renamed XrInterface]
* Add engine class XRNode3D  [renamed XrNode3D] <- inherits Node3D
* Add engine class XROrigin3D  [renamed XrOrigin3D] <- inherits Node3D
* Add engine class XRPose  [renamed XrPose] <- inherits RefCounted
* Add engine class XRPositionalTracker  [renamed XrPositionalTracker] <- inherits XRTracker  [renamed XrTracker]
* Add engine class XRServer  [renamed XrServer] <- inherits Object
* Add engine class XRTracker  [renamed XrTracker] <- inherits RefCounted
* Add engine class XRVRS  [renamed Xrvrs] <- inherits Object
* Add engine class ZIPPacker  [renamed ZipPacker] <- inherits RefCounted
* Add engine class ZIPReader  [renamed ZipReader] <- inherits RefCounted
cargo:rerun-if-changed=build.rs
cargo:rustc-check-cfg=cfg(published_docs, values(none()))
cargo:rustc-check-cfg=cfg(since_api, values("4.1"))
cargo:rustc-check-cfg=cfg(before_api, values("4.1"))
cargo:rustc-check-cfg=cfg(since_api, values("4.2"))
cargo:rustc-check-cfg=cfg(before_api, values("4.2"))
cargo:rustc-check-cfg=cfg(since_api, values("4.3"))
cargo:rustc-check-cfg=cfg(before_api, values("4.3"))
cargo:rustc-check-cfg=cfg(since_api, values("4.4"))
cargo:rustc-check-cfg=cfg(before_api, values("4.4"))
cargo:rustc-cfg=since_api="4.1"
cargo:rustc-cfg=since_api="4.2"
cargo:rustc-cfg=since_api="4.3"
cargo:rustc-cfg=before_api="4.4"
cargo:rustc-cfg=before_patch_api="4.1.0"
cargo:rustc-cfg=before_patch_api="4.1.1"
cargo:rustc-cfg=before_patch_api="4.1.2"
cargo:rustc-cfg=before_patch_api="4.1.3"
cargo:rustc-cfg=before_patch_api="4.1.4"
cargo:rustc-cfg=before_patch_api="4.2.0"
cargo:rustc-cfg=before_patch_api="4.2.1"
cargo:rustc-cfg=before_patch_api="4.2.2"
cargo:rustc-cfg=since_patch_api="4.3.0"
cargo:rustc-cfg=since_patch_api="4.4.0"
cargo:rustc-check-cfg=cfg(wasm_nothreads, values(none()))
